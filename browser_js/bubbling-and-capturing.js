// ПОЛНАЯ МОДЕЛЬ СОБЫТИЙ DOM
// Три фазы обработки события:
// Фаза погружения (Capturing Phase) - событие идет от корня к цели
// Фаза цели (Target Phase) - событие достигло целевого элемента
// Фаза всплытия (Bubbling Phase) - событие идет от цели к корню

// Всплытие - это механизм распространения событий в DOM, 
// при котором событие, возникшее на целевом элементе, 
// последовательно передается всем его родительским элементам по иерархии DOM дерева снизу вверх до корневого элемента document.

// События, которые НЕ всплывают:
// focus / blur
// load / unload
// mouseenter / mouseleave
// resize

// event.target vs this
form.onclick = function(event) {
    console.log('event.target:', event.target.tagName);  // Где РЕАЛЬНО кликнули
    console.log('this:', this.tagName);                  // Где ОБРАБОТЧИК висит
  }
//   event.target - элемент, на котором РЕАЛЬНО произошел клик
//   this - элемент, на котором ВИСИТ обработчик
//   Пример: Кликнули на <p>, но обработчик висит на <form>
//   event.target = P (где кликнули)
//   this = FORM (где обработчик)


// Остановка всплытия
element.onclick = function(event) {
    event.stopPropagation(); // Останавливает всплытие
    alert('Событие остановлено здесь!');
  }

// Зачем нужно всплытие?
// Для делегирования событий - можно повесить один обработчик на родителя вместо множества на детей.
// Делегирование: один обработчик на список
document.getElementById('list').addEventListener('click', function(e) {
    if (e.target.tagName === 'LI') {
      alert('Кликнули на: ' + e.target.textContent);
    }
  });

// Погружение - это механизм распространения события в DOM,
// при котором событие сначала захватывается корневым элементом и последовательно передается вниз по иерархии Dom дерева к целевому элементу 
// Активируется только при явном указании { capture: true } или true в третьем параметре addEventListener

