// Сборка мусора – это автоматический процесс управления памятью в JavaScript. 
// Движок JavaScript следит за объектами (примитивы, функции, объекты) и очищает память от тех из них, которые больше не используются.

// Достижимость (Reachability)
// Достижимое значение – объект или значение считается достижимым, если к нему можно добраться через цепочку ссылок из корней.
// Корни (roots):
// Глобальные переменные.
// Локальные переменные текущих вызовов функций.
// Аргументы функций, текущие элементы стека вызовов.
// Важно: Даже если объект ссылается на другие объекты, он считается недостижимым, если ни один корень не имеет к нему ссылки.

// Принцип работы сборки мусора
// Алгоритм сборки мусора обычно использует подход «маркировки и удаления» (mark-and-sweep):
// Маркировка: Сборщик мусора начинает с корневых объектов и помечает все достижимые объекты (то, до чего можно добраться по ссылкам).
// Удаление: Все объекты, которые не были помечены, считаются недостижимыми («мусором») и подлежат удалению.

// Взаимосвязанные объекты и «недостижимый остров»
// Даже если объекты ссылаются друг на друга (например, в случае взаимных ссылок между объектами John и Ann), 
// они будут удалены, если к ним нет входящих ссылок из корневых объектов.
// Это можно представить как «недостижимый остров» объекта, где взаимные ссылки существуют, но вне его области видимости нет корневых ссылок.

// Оптимизации сборщика мусора
// Современные движки JavaScript используют ряд оптимизаций для ускорения процесса сборки мусора и уменьшения задержек:
// Сборка по поколениям (Generational Collection):
// Делит объекты на «новые» и «старые». Большинство объектов живут недолго, поэтому новые объекты проверяются чаще, старые — реже.
// Инкрементальная сборка (Incremental Collection):
// Если объектов много, процесс сбора мусора разбивается на небольшие части, чтобы избежать значительных задержек.
// Сборка в свободное время (Idle-time Collection):
// Сборщик мусора выполняется в периоды простоя, чтобы минимально влиять на производительность приложения.